package Algorithms.LeetCode;

public class L0041Extension {
    public static void main(String[] args) {
        int[] input = {1, 2, 3, 4, 6, 7, 8, 9, 17, 2000};
        int result = findFirstKthMinPositive(input, 3);
        System.out.println("result  " + result);
    }

    public static int findFirstKthMinPositive(int[] input, int k) {
        int[] labelArray = new int[input.length + 1 + k];
        int count = 0;
        for (int m = 0; m < labelArray.length; m++) {
            labelArray[m] = 0;
        }
        labelArray[0] = 1;
        for (int j = 0; j < input.length; j++) {
            if (input[j] <= labelArray.length - 1) {
                labelArray[input[j]] = 1;
            }
        }
        for (int n = 0; n < labelArray.length; n++) {
            if (labelArray[n] == 0) {
                count++;
            }
            if(count==k){
                return n;
            }
        }
        return -1;
    }
}
