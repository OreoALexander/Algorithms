package Algorithms.LeetCode;

import java.util.HashMap;
import java.util.Map;

/**
 * 1 what is this problem say ?
 * given an array of integers return indices of the two numbers such that
 * they add up to a specific target.
 * eg. 1 2 3 4 5 and target is 8 we need to return the index 2 and 4 .
 * so how to do that ? yes it is great !
 * yes so the fundamental problem will be
 * yes that is great so
 * how I can get the index of the two number to let this two number's sum equals to the target
 * and farther more
 * if here are more than one pair possibilities . how to get all of them ?
 * and how to display them properly ?
 */
public class L0001TwoSum {
    public static void main(String[] args) {
        int[] input = {1, 3, 6, 7, 10, 13, 16};
        int target = 1100;
        int[] result = getIndex(input, target);
        for (int k = 0; k < result.length; k++) {
            System.out.println(result[k]);
        }

    }

    public static int[] getIndex(int[] array, int target) {
        int[] result = new int[2];
        Map<Integer, Integer> recordMap = new HashMap<>();
        for (int i = 0; i < array.length; i++) {
            if (recordMap.containsKey(target - array[i])) {
                result[1] = i;
                result[0] = recordMap.get(target - array[i]);
                return result;
            } else {
                recordMap.put(array[i], i);
            }
        }
        return result;
    }
}
