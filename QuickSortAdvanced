package Algorithms.Sort;

public class QuickSortAdvanced {
    public static void main(String[] args) {

        int[] array = {4, 1, 3, 2, 6, 5, 56, 2};
        quickSort(array, 0, array.length - 1);
        for (int i = 0; i < array.length; i++) {
            System.out.print(array[i] + "-");
        }
    }

    public static void quickSort(int[] array, int left, int right) {
        if (left < right) {
            int q = partition(array, left, right);
            quickSort(array, left, q - 1);
            quickSort(array, q + 1, right);
        }
    }

    public static int partition(int[] array, int left, int right) {
        int start = left;
        int target = array[start];
        while (left < right) {
            while (left < right && array[right] > target) {
                right--;
            }
            while (left < right && array[left] <= target) {
                left++;
            }
            if (left >= right) {
                break;
            }
            int temp = array[left];
            array[left] = array[right];
            array[right] = temp;
        }
        array[start] = array[right];
        array[right] = target;
        return right;
    }
}
